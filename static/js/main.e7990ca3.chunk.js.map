{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","goodsListReverse","setState","prevState","sortByAlphabet","ALPHABET","sortByLength","LENGTH","resetGoodsList","NONE","this","goods","visibleGoods","sort","a","b","localeCompare","length","reverse","getReorderedGoods","className","type","id","onClick","map","productName","React","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"iKAsBKA,E,+FAlBQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAQGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAqCE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAU,GAHd,EAMEC,iBAAmB,WACjB,EAAKC,UAAS,SAAAC,GAAS,MACrB,CAAEJ,YAAaI,EAAUJ,gBAR/B,EAWEK,eAAiB,WACf,EAAKF,UAAS,SAAAC,GAAS,kCAAUA,GAAV,IAAqBH,SAAUL,EAASU,eAZnE,EAeEC,aAAe,WACb,EAAKJ,UAAS,SAAAC,GAAS,kCAAUA,GAAV,IAAqBH,SAAUL,EAASY,aAhBnE,EAmBEC,eAAiB,WACf,EAAKN,SAAS,CAAEH,YAAY,EAAOC,SAAUL,EAASc,QApB1D,4CAuBE,WACE,IAAQT,EAAaU,KAAKZ,MAAlBE,SAEFW,EAzDH,SACLA,EADK,GAGM,IADTX,EACQ,EADRA,SAAUD,EACF,EADEA,WAENa,EAAY,YAAOD,GAEzB,OAAQX,GACN,KAAKL,EAASU,SACZO,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC5C,MAEF,KAAKpB,EAASY,OACZK,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UAW7C,OAJIlB,GACFa,EAAaM,UAGRN,EAkCSO,CAAkBvB,EAAiBc,KAAKZ,OAEtD,OACE,sBAAKsB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,GAAG,YACHF,UAAS,wCACJpB,IAAaL,EAASU,SAAW,GAAK,YAC3CkB,QAASb,KAAKN,eALhB,iCAUA,wBACEiB,KAAK,SACLC,GAAG,eACHF,UAAS,2CACJpB,IAAaL,EAASY,OAAS,GAAK,YACzCgB,QAASb,KAAKJ,aALhB,4BAUA,wBACEe,KAAK,SACLC,GAAG,UACHC,QAASb,KAAKT,iBACdmB,UAAS,2CACJV,KAAKZ,MAAMC,WAAa,GAAK,YALpC,sBAUEW,KAAKZ,MAAMC,YAAcC,IAAaL,EAASc,OAE/C,wBACEY,KAAK,SACLC,GAAG,QACHF,UAAU,4BACVG,QAASb,KAAKF,eAJhB,sBAWJ,6BACE,6BACGG,EAAMa,KAAI,SAAAC,GAAW,OACpB,oBAAI,UAAQ,OAAZ,SAAsCA,GAAdA,iBA7EtC,GAAyBC,IAAMC,eCxD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e7990ca3.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n): string[] {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: number,\n};\n\nexport class App extends React.PureComponent<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: 0,\n  };\n\n  goodsListReverse = (): void => {\n    this.setState(prevState => (\n      { isReversed: !prevState.isReversed }));\n  };\n\n  sortByAlphabet = (): void => {\n    this.setState(prevState => ({ ...prevState, sortType: SortType.ALPHABET }));\n  };\n\n  sortByLength = (): void => {\n    this.setState(prevState => ({ ...prevState, sortType: SortType.LENGTH }));\n  };\n\n  resetGoodsList = (): void => {\n    this.setState({ isReversed: false, sortType: SortType.NONE });\n  };\n\n  render() {\n    const { sortType } = this.state;\n\n    const goods = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            id=\"SortByAbc\"\n            className={`button is-info\n              ${(sortType === SortType.ALPHABET ? '' : 'is-light')}`}\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            id=\"SortByLength\"\n            className={`button is-success\n              ${(sortType === SortType.LENGTH ? '' : 'is-light')}`}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            id=\"reverse\"\n            onClick={this.goodsListReverse}\n            className={`button is-warning\n              ${(this.state.isReversed ? '' : 'is-light')}`}\n          >\n            Reverse\n          </button>\n\n          {(this.state.isReversed || sortType !== SortType.NONE)\n          && (\n            <button\n              type=\"button\"\n              id=\"reset\"\n              className=\"button is-danger is-light\"\n              onClick={this.resetGoodsList}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {goods.map(productName => (\n              <li data-cy=\"Good\" key={productName}>{productName}</li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}