{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","goods","state","isReversed","sortType","buttonClickReverse","reverse","setState","prevState","buttonClickAbc","sort","a","b","localeCompare","ALPHABET","buttonClickLength","length","LENGTH","buttonClickReset","NONE","className","type","id","this","onClick","map","productName","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAME,IAAME,EAAb,4MACEC,MADF,UACcF,GADd,EAGEG,MAAQ,CACNC,YAAY,EACZC,SAAU,GALd,EAQEC,mBAAqB,WACnB,EAAKJ,MAAQ,EAAKA,MAAMK,UACxB,EAAKC,UAAS,SAAAC,GAAS,kCAChBA,GADgB,IACLL,YAAaK,EAAUL,iBAX7C,EAcEM,eAAiB,WACf,EAAKR,MAAL,YAAiB,EAAKA,MAAMS,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,OAC3D,EAAKL,UAAS,SAAAC,GAAS,kCAAUA,GAAV,IAAqBJ,SAAUN,EAASgB,eAhBnE,EAmBEC,kBAAoB,WAClB,EAAKd,MAAL,YAAiB,EAAKA,MAAMS,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEK,OAASJ,EAAEI,WACxD,EAAKT,UAAS,SAAAC,GAAS,kCAAUA,GAAV,IAAqBJ,SAAUN,EAASmB,aArBnE,EAwBEC,iBAAmB,WACjB,EAAKjB,MAAL,UAAiBF,GACjB,EAAKQ,UAAS,SAAAC,GAAS,kCAChBA,GADgB,IACLL,YAAY,EAAOC,SAAUN,EAASqB,WA3B5D,4CA8BE,WACE,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,GAAG,YACHF,UAAS,wCACJG,KAAKrB,MAAME,WAAaN,EAASgB,SAAW,GAAK,YACtDU,QAASD,KAAKd,eALhB,iCAUA,wBACEY,KAAK,SACLC,GAAG,eACHF,UAAS,2CACJG,KAAKrB,MAAME,WAAaN,EAASmB,OAAS,GAAK,YACpDO,QAASD,KAAKR,kBALhB,4BAUA,wBACEM,KAAK,SACLC,GAAG,UACHE,QAASD,KAAKlB,mBACde,UAAS,2CACJG,KAAKrB,MAAMC,WAAa,GAAK,YALpC,sBAUEoB,KAAKrB,MAAMC,YAAcoB,KAAKrB,MAAME,WAAaN,EAASqB,OAE1D,wBACEE,KAAK,SACLC,GAAG,QACHF,UAAU,4BACVI,QAASD,KAAKL,iBAJhB,sBAWJ,6BACE,6BACGK,KAAKtB,MAAMwB,KAAI,SAAAC,GAAW,OACzB,oBAAI,UAAQ,OAAZ,SAAsCA,GAAdA,iBAhFtC,GAAyBC,IAAMC,WCrB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e5a2ca96.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport class App extends React.Component {\n  goods = [...goodsFromServer];\n\n  state = {\n    isReversed: false,\n    sortType: 0,\n  };\n\n  buttonClickReverse = (): void => {\n    this.goods = this.goods.reverse();\n    this.setState(prevState => (\n      { ...prevState, isReversed: !prevState.isReversed }));\n  };\n\n  buttonClickAbc = (): void => {\n    this.goods = [...this.goods.sort((a, b) => a.localeCompare(b))];\n    this.setState(prevState => ({ ...prevState, sortType: SortType.ALPHABET }));\n  };\n\n  buttonClickLength = (): void => {\n    this.goods = [...this.goods.sort((a, b) => a.length - b.length)];\n    this.setState(prevState => ({ ...prevState, sortType: SortType.LENGTH }));\n  };\n\n  buttonClickReset = (): void => {\n    this.goods = [...goodsFromServer];\n    this.setState(prevState => (\n      { ...prevState, isReversed: false, sortType: SortType.NONE }));\n  };\n\n  render() {\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            id=\"SortByAbc\"\n            className={`button is-info\n              ${(this.state.sortType === SortType.ALPHABET ? '' : 'is-light')}`}\n            onClick={this.buttonClickAbc}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            id=\"SortByLength\"\n            className={`button is-success\n              ${(this.state.sortType === SortType.LENGTH ? '' : 'is-light')}`}\n            onClick={this.buttonClickLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            id=\"reverse\"\n            onClick={this.buttonClickReverse}\n            className={`button is-warning\n              ${(this.state.isReversed ? '' : 'is-light')}`}\n          >\n            Reverse\n          </button>\n\n          {(this.state.isReversed || this.state.sortType !== SortType.NONE)\n          && (\n            <button\n              type=\"button\"\n              id=\"reset\"\n              className=\"button is-danger is-light\"\n              onClick={this.buttonClickReset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {this.goods.map(productName => (\n              <li data-cy=\"Good\" key={productName}>{productName}</li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}