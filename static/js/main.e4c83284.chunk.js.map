{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","goods","state","isReversed","sortType","buttonClickReverse","setState","prevState","buttonClickByAlphabet","ALPHABET","buttonClickByLength","LENGTH","buttonClickResetGoodsList","NONE","this","visibleGoods","sort","a","b","localeCompare","length","reverse","getReorderedGoods","className","type","id","onClick","map","productName","React","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"iKAuBKA,E,+FAlBQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAQGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAsCE,IAAME,EAAb,4MACEC,MADF,UACcF,GADd,EAGEG,MAAQ,CACNC,YAAY,EACZC,SAAU,GALd,EAQEC,mBAAqB,WACnB,EAAKC,UAAS,SAAAC,GAAS,kCAChBA,GADgB,IACLJ,YAAaI,EAAUJ,iBAV7C,EAaEK,sBAAwB,WACtB,EAAKF,UAAS,SAAAC,GAAS,kCAAUA,GAAV,IAAqBH,SAAUN,EAASW,eAdnE,EAiBEC,oBAAsB,WACpB,EAAKJ,UAAS,SAAAC,GAAS,kCAAUA,GAAV,IAAqBH,SAAUN,EAASa,aAlBnE,EAqBEC,0BAA4B,WAC1B,EAAKN,UAAS,SAAAC,GAAS,kCAChBA,GADgB,IACLJ,YAAY,EAAOC,SAAUN,EAASe,WAvB5D,4CA0BE,WAGE,OAFAC,KAAKb,MA3DF,SACLA,EADK,GAGM,IADTG,EACQ,EADRA,SAAUD,EACF,EADEA,WAERY,EAAY,YAAOd,GAEvB,OAAQG,GACN,KAAKN,EAASW,SACZM,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC5C,MAEF,KAAKpB,EAASa,OACZI,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UACzC,MAEF,QACEL,EAAY,UAAOhB,GAQvB,OAJII,GACFY,EAAaM,UAGRN,EAmCQO,CAAkBR,KAAKb,MAAOa,KAAKZ,OAG9C,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,GAAG,YACHF,UAAS,wCACJT,KAAKZ,MAAME,WAAaN,EAASW,SAAW,GAAK,YACtDiB,QAASZ,KAAKN,sBALhB,iCAUA,wBACEgB,KAAK,SACLC,GAAG,eACHF,UAAS,2CACJT,KAAKZ,MAAME,WAAaN,EAASa,OAAS,GAAK,YACpDe,QAASZ,KAAKJ,oBALhB,4BAUA,wBACEc,KAAK,SACLC,GAAG,UACHC,QAASZ,KAAKT,mBACdkB,UAAS,2CACJT,KAAKZ,MAAMC,WAAa,GAAK,YALpC,sBAUEW,KAAKZ,MAAMC,YAAcW,KAAKZ,MAAME,WAAaN,EAASe,OAE1D,wBACEW,KAAK,SACLC,GAAG,QACHF,UAAU,4BACVG,QAASZ,KAAKF,0BAJhB,sBAWJ,6BACE,6BACGE,KAAKb,MAAM0B,KAAI,SAAAC,GAAW,OACzB,oBAAI,UAAQ,OAAZ,SAAsCA,GAAdA,iBA9EtC,GAAyBC,IAAMC,eC1D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e4c83284.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n): string[] {\n  let visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n\n    default:\n      visibleGoods = [...goodsFromServer];\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: number,\n};\n\nexport class App extends React.PureComponent<{}, State> {\n  goods = [...goodsFromServer];\n\n  state = {\n    isReversed: false,\n    sortType: 0,\n  };\n\n  buttonClickReverse = (): void => {\n    this.setState(prevState => (\n      { ...prevState, isReversed: !prevState.isReversed }));\n  };\n\n  buttonClickByAlphabet = (): void => {\n    this.setState(prevState => ({ ...prevState, sortType: SortType.ALPHABET }));\n  };\n\n  buttonClickByLength = (): void => {\n    this.setState(prevState => ({ ...prevState, sortType: SortType.LENGTH }));\n  };\n\n  buttonClickResetGoodsList = (): void => {\n    this.setState(prevState => (\n      { ...prevState, isReversed: false, sortType: SortType.NONE }));\n  };\n\n  render() {\n    this.goods = getReorderedGoods(this.goods, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            id=\"SortByAbc\"\n            className={`button is-info\n              ${(this.state.sortType === SortType.ALPHABET ? '' : 'is-light')}`}\n            onClick={this.buttonClickByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            id=\"SortByLength\"\n            className={`button is-success\n              ${(this.state.sortType === SortType.LENGTH ? '' : 'is-light')}`}\n            onClick={this.buttonClickByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            id=\"reverse\"\n            onClick={this.buttonClickReverse}\n            className={`button is-warning\n              ${(this.state.isReversed ? '' : 'is-light')}`}\n          >\n            Reverse\n          </button>\n\n          {(this.state.isReversed || this.state.sortType !== SortType.NONE)\n          && (\n            <button\n              type=\"button\"\n              id=\"reset\"\n              className=\"button is-danger is-light\"\n              onClick={this.buttonClickResetGoodsList}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {this.goods.map(productName => (\n              <li data-cy=\"Good\" key={productName}>{productName}</li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}